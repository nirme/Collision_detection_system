#pragma once

#define _USE_MATH_DEFINES

// dont go below 10^-3, will cause issues with physics
#define EPSILON 0.001f
#define GJK_EPSILON	0.0001f
//#define EPA_TOLERANCE 0.0001f
#define TOI_DISTANCE_EPSILON 0.01f
#define COLLISION_DISTANCE_EPSILON 0.01f

#define GJK_STEPS_LIMIT		40
#define EPA_STEPS_LIMIT		40
#define EPA_POLYGON_RESERVED_SIZE		24
#define TOI_STEPS_LIMIT		40
#define TOI_FEATURE_STEPS_LIMIT		40
#define DEEPEST_POINT_SOLVER_STEPS_LIMIT		40

#define PGS_LAMBDA_MAX_STEPS	100
#define PGS_LAMBDA_MAX_DELTA	0.01f


#include <limits>

#define N_INF -std::numeric_limits<float>::infinity()
#define P_INF std::numeric_limits<float>::infinity()


#define INVALID_INDEX	-1

#define COLLIDER_STEP_HISTORY_SIZE	10


#define COLLIDER_ID_LEN		32
#define CONSTRAINT_ID_LEN		32
#define AFFECTOR_ID_LEN		32


/*
template <typename T> int sgn(T val)
{
	return (T(0) < val) - (val < T(0));
}
*/

#include <d3d9.h>
#include <array>
/*
static constexpr std::array<float, 128 > circlePoints = {
	1.0f, 0.0f, 0.995184f, -0.098017f, 0.980785f, -0.195090f, 0.956940f, -0.290284f, 0.923879f, -0.382683f, 0.881921f, -0.471396f, 0.831469f, -0.555570f, 0.773010f, -0.634393f, 0.707106f, -0.707106f, 0.634393f, -0.773010f, 0.555570f, -0.831469f, 0.471396f, -0.881921f, 0.382683f, -0.923879f, 0.290284f, -0.956940f, 0.195090f, -0.980785f, 0.098017f, -0.995184f, 0.0f, -1.0f, -0.098017f, -0.995184f, -0.195090f, -0.980785f, -0.290284f, -0.956940f, -0.382683f, -0.923879f, -0.471396f, -0.881921f, -0.555570f, -0.831469f, -0.634393f, -0.773010f, -0.707106f, -0.707106f, -0.773010f, -0.634393f, -0.831469f, -0.555570f, -0.881921f, -0.471396f, -0.923879f, -0.382683f, -0.956940f, -0.290284f, -0.980785f, -0.195090f, -0.995184f, -0.098017f, -1.0f, 0.0f, -0.995184f, 0.098017f, -0.980785f, 0.195090f, -0.956940f, 0.290284f, -0.923879f, 0.382683f, -0.881921f, 0.471396f, -0.831469f, 0.555570f, -0.773010f, 0.634393f, -0.707106f, 0.707106f, -0.634393f, 0.773010f, -0.555570f, 0.831469f, -0.471396f, 0.881921f, -0.382683f, 0.923879f, -0.290284f, 0.956940f, -0.195090f, 0.980785f, -0.098017f, 0.995184f, 0.0f, 1.0f, 0.098017f, 0.995184f, 0.195090f, 0.980785f, 0.290284f, 0.956940f, 0.382683f, 0.923879f, 0.471396f, 0.881921f, 0.555570f, 0.831469f, 0.634393f, 0.773010f, 0.707106f, 0.707106f, 0.773010f, 0.634393f, 0.831469f, 0.555570f, 0.881921f, 0.471396f, 0.923879f, 0.382683f, 0.956940f, 0.290284f, 0.980785f, 0.195090f, 0.995184f, 0.098017f
};
*/

static constexpr std::array<float, 128 > circlePoints = {
	0.00000000f, 1.00000000f, 0.09801714f, 0.99518473f, 0.19509032f, 0.98078528f, 0.29028468f, 0.95694034f, 0.38268343f, 0.92387953f, 0.47139674f, 0.88192126f, 0.55557023f, 0.83146961f, 0.63439328f, 0.77301045f, 0.70710678f, 0.70710678f, 0.77301045f, 0.63439328f, 0.83146961f, 0.55557023f, 0.88192126f, 0.47139674f, 0.92387953f, 0.38268343f, 0.95694034f, 0.29028468f, 0.98078528f, 0.19509032f, 0.99518473f, 0.09801714f, 1.00000000f, 0.00000000f, 0.99518473f, -0.09801714f, 0.98078528f, -0.19509032f, 0.95694034f, -0.29028468f, 0.92387953f, -0.38268343f, 0.88192126f, -0.47139674f, 0.83146961f, -0.55557023f, 0.77301045f, -0.63439328f, 0.70710678f, -0.70710678f, 0.63439328f, -0.77301045f, 0.55557023f, -0.83146961f, 0.47139674f, -0.88192126f, 0.38268343f, -0.92387953f, 0.29028468f, -0.95694034f, 0.19509032f, -0.98078528f, 0.09801714f, -0.99518473f, 0.00000000f, -1.00000000f, -0.09801714f, -0.99518473f, -0.19509032f, -0.98078528f, -0.29028468f, -0.95694034f, -0.38268343f, -0.92387953f, -0.47139674f, -0.88192126f, -0.55557023f, -0.83146961f, -0.63439328f, -0.77301045f, -0.70710678f, -0.70710678f, -0.77301045f, -0.63439328f, -0.83146961f, -0.55557023f, -0.88192126f, -0.47139674f, -0.92387953f, -0.38268343f, -0.95694034f, -0.29028468f, -0.98078528f, -0.19509032f, -0.99518473f, -0.09801714f, -1.00000000f, 0.00000000f, -0.99518473f, 0.09801714f, -0.98078528f, 0.19509032f, -0.95694034f, 0.29028468f, -0.92387953f, 0.38268343f, -0.88192126f, 0.47139674f, -0.83146961f, 0.55557023f, -0.77301045f, 0.63439328f, -0.70710678f, 0.70710678f, -0.63439328f, 0.77301045f, -0.55557023f, 0.83146961f, -0.47139674f, 0.88192126f, -0.38268343f, 0.92387953f, -0.29028468f, 0.95694034f, -0.19509032f, 0.98078528f, -0.09801714f, 0.99518473f
};
